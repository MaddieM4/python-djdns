#!/usr/bin/env python

from __future__ import print_function

from argh import dispatch_command, arg
import os
import sys
import grp
import pwd
import threading
import time
import traceback

from djdns.server import DJServer

def get_uid(username):
    return pwd.getpwnam(username).pw_uid

def get_gid(groupname):
    return grp.getgrnam(groupname).gr_gid

def drop_priveleges(user, group):
    uid = get_uid(user)
    gid = get_gid(group)
    os.setgid(gid)
    os.setuid(uid)

def serve_threaded(server):
    thread = threading.Thread(target=server.serve)
    thread.daemon = True
    thread.start()
    return thread

def serve_wait(*servers):
    try:
        while True:
            time.sleep(1)
            for server in servers:
                if not server.serving:
                    break
    except KeyboardInterrupt:
        pass

    for server in servers:
        print("STOPPING SERVER", server)
        server.stop()
        server.thread.join(1)

ROOT_WARNING = """
WARNING: Running as root with no privelege drop.
This is a really bad idea, but we won't stop you.
"""

@arg('-d', '--dir',  help='Directory to look for DJDNS page data.', default='.')
@arg('-r', '--root', help='Path of root page.')
@arg('-P', '--port', help='Port to host on.', type=int)
@arg('-H', '--host', help='Host to host on.')
@arg('-u', '--user', help='Switch to user (or user:group) after binding socket.')
@arg('-t', '--title',   help='Attempt to set process title.')
@arg('-v', '--verbose', help='Display more output, for debugging purposes.')
@arg('--version', help='Print DJDNS version and immediately exit.')
def main(dir='.',
         root='root.json',
         port=53,
         host='::',
         user='',
         title='djdns',
         version=False,
         verbose=False):
    '''
    DJDNS Hosting Script.

    If you want to use the default DNS port, 53, you need to start
    DJDNS as root. Leaving it running as root, though, is dangerous.
    This script includes privelege-dropping, just use the -u $USER
    option.
    '''

    if version:
        return 'djdns 0.0.1'

    if title:
        try:
            from setproctitle import setproctitle
            setproctitle(title)
        except ImportError:
            print('Could not set process title', file=sys.stderr)
    os.chdir(dir)

    if ':' in host: #IPv6
        host = (host, 0, 1)

    config = {
        'listen_host': host,
        'listen_port': port,
        'path'  : root,
        'debug' : verbose,
    }

    server = DJServer(**config)
    server.bind()

    if user:
        group = user
        if ':' in user:
            user, group = user.split(':')

        try:
            drop_priveleges(user, group)
        except:
            traceback.print_exc()
            quit(1)
    elif os.geteuid() == 0:
        print(ROOT_WARNING, file=sys.stderr)

    server.thread = serve_threaded(server)
    serve_wait(server)

if __name__ == '__main__':
    dispatch_command(main, completion=False)
